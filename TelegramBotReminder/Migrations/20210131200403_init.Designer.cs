// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelegramBotReminder.Data;

namespace TelegramBotReminder.Migrations
{
    [DbContext(typeof(BotContext))]
    [Migration("20210131200403_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TelegramBotReminder.Models.Cliente", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activated")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastSend")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("RemindTimeToSend")
                        .HasColumnType("time(6)");

                    b.Property<bool>("RiverLevel")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("StartChat")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TelegramChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("TextMessage")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ClientId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TelegramBotReminder.Models.Mensagem", b =>
                {
                    b.Property<int>("MensagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("MessageSent")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TextMessage")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("MensagemId", "ClienteId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Mensagens");
                });

            modelBuilder.Entity("TelegramBotReminder.Models.Mensagem", b =>
                {
                    b.HasOne("TelegramBotReminder.Models.Cliente", "Cliente")
                        .WithMany("MessageHistory")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
